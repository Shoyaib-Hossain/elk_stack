input {
  beats {
    port => 5044
  }
  tcp {
    port => 5000  # This is the internal port, no need to change this
    codec => json
  }
}

filter {
  if [message] {
    # Parse logs with timestamps and log levels
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:[@metadata][timestamp]}\s+%{LOGLEVEL:log.level}\s+%{GREEDYDATA:log.message}" }
      # If the above pattern doesn't match, don't fail
      tag_on_failure => ["_grokparsefailure"]
      overwrite => [ "message" ]
    }
    
    # If timestamp was extracted, use it for @timestamp
    if [@metadata][timestamp] {
      date {
        match => [ "[@metadata][timestamp]", "ISO8601" ]
        target => "@timestamp"
      }
    }
  }
  
  # Add processing metadata
  mutate {
    add_field => {
      "[event][dataset]" => "log"
      "[processed_by]" => "logstash"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    user => "logstash_internal"
    password => "changeme"
    index => "logstash-%{+YYYY.MM.dd}"
  }
  # For debugging - comment out in production
  stdout { codec => rubydebug }
}